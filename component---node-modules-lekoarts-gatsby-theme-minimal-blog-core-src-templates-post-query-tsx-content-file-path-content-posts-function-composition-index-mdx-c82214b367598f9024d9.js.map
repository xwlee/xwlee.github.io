{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-function-composition-index-mdx-c82214b367598f9024d9.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,YAAa,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,4GAA6G,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACzVI,UAAW,eACV,kUAAmU,KAAMD,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,YAAa,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,SAAUK,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,cAAe,KAAM,KAAMG,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACllBI,UAAW,eACV,gMAAiM,KAAMD,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,YAAa,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,aAAcK,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,cAAe,kFAAmFG,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,cAAe,sEAAuE,KAAMG,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACnqBI,UAAW,eACV,yLAA0L,KAAMD,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,iFAAkF,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACnZI,UAAW,eACV,kvBACL,CAKA,MAJA,SAAoBX,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,SCnBe,SAASc,EAAiBd,GACvC,OAAOU,EAAAA,cAAoBK,EAAAA,EAAef,EAAOU,EAAAA,cAAoBM,EAAqBhB,GAC5F,CAHAe,EAAAA,C","sources":["webpack://minimal-blog/./content/posts/function-composition/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Method 1\"), \"\\n\", React.createElement(_components.p, null, \"Uses a loop and eagerly (aka, immediately) calculates the result of one call to pass into the next call.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function compose(...fns) {\\n  return function composed(result) {\\n    // Copy the array of functions\\n    var list = [...fns];\\n\\n    while (list.length > 0) {\\n      // Take the last function off the end of the list\\n      // and execute it\\n      result = list.pop()(result);\\n    }\\n\\n    return result;\\n  };\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Method 2\"), \"\\n\", React.createElement(_components.p, null, \"Using \", React.createElement(_components.code, null, \"reduce(..)\"), \".\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function compose(...fns) {\\n  return function composed(result) {\\n    return [...fns].reverse().reduce(function reducer(result, fn) {\\n      return fn(result);\\n    }, result);\\n  };\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Method 3\"), \"\\n\", React.createElement(_components.p, null, \"Still use \", React.createElement(_components.code, null, \"reduce(..)\"), \", but produce a lazy evaluation function wrapping. We return the result of the \", React.createElement(_components.code, null, \"reduce(..)\"), \" call directly, which is itself a function, not a computed result.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function compose(...fns) {\\n  return fns.reverse().reduce(function reducer(fn1, fn2) {\\n    return function composed(...args) {\\n      return fn2(fn1(...args));\\n    };\\n  });\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"The produced wrapped function was similar to the one composed manually below:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// Here we compose 4 functions manually.\\n\\n// The first function can accept multiple argument\\nvar fn1 = (...arg) => {\\n  console.log(\\\"fn1\\\", arg);\\n  return arg;\\n};\\n\\n// Add 2 to each number\\nvar fn2 = (arg) => {\\n  console.log(\\\"fn2\\\", arg);\\n  return arg.map((x) => x + x);\\n};\\n\\n// Multiply each number by 2\\nvar fn3 = (arg) => {\\n  console.log(\\\"fn3\\\", arg);\\n  return arg.map((x) => x * x);\\n};\\n\\nvar fn4 = (arg) => {\\n  console.log(\\\"fn4\\\", arg);\\n  return arg;\\n};\\n\\nvar myFn = function composed(...args) {\\n  return fn4(\\n    (function composed(...args) {\\n      return fn3(\\n        (function composed(...args) {\\n          return fn2(fn1(...args));\\n        })(...args)\\n      );\\n    })(...args)\\n  );\\n};\\nmyFn(1, 2, 3); // [4, 16, 36]\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/blog/blog/content/posts/function-composition/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}